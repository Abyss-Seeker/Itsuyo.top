[{"title":"孩子们，我回来了","url":"/2025/02/14/%E5%AD%A9%E5%AD%90%E4%BB%AC%EF%BC%8C%E6%88%91%E5%9B%9E%E6%9D%A5%E4%BA%86/","content":"该怎么说呢。。。4个月没有动这个blog，自己也感觉有点懈怠了。正好趁换了电脑的动机，让我们把它复活吧！\n最近经历了不少事情，包括大学申请啊之类的。结果的话，，目前看来也不算差吧，差强人意了。\n最近训练了一些GPT-SoVits的角色语音包，真的挺好用的，感谢大佬！想到可以分享给别人，嗯，我就准备再把这个网站启用起来了…也算是留点有用的网络遗产~\n不知道该说什么好，虽然没有多少人能看见，但是还是很感谢大家一直以来的捧场，嘿嘿~\n哦以及情人节快乐哈哈哈哈~\n\n\n❤Love❤！\n\n","categories":["不重要告示"],"tags":["废话","碎碎念"]},{"title":"更新了Resources页面！","url":"/2025/02/15/%E6%9B%B4%E6%96%B0%E4%BA%86Resources%E9%A1%B5%E9%9D%A2%EF%BC%81/","content":"\n\n\n在左侧菜单栏中新加入了Resources页面！以后的模型啊啥的会都丢在里面，以及一些小资源之类的。。\n大半夜的写不动了想赶紧睡觉zzz\n会持续更新~\n","categories":["重要告示"],"tags":["更新","资源"]},{"title":"Hello World","url":"/2024/09/06/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","categories":["试验文章"]},{"title":"Anime_Browser工具发布！","url":"/2025/02/25/Anime-Browser%E5%B7%A5%E5%85%B7%E5%8F%91%E5%B8%83%EF%BC%81/","content":"\n\n那是一个月黑风高的夜晚。\n\n我追完了爱生活！虹咲学院同好会！的第一季。\n沉浸在可爱女孩的一声声“篱奈篱~”，“爱桑~”，“kazumin⭐~”，和夹脚中\n我想去看第二季\n”仅限港澳台地区“\n🤯\n我觉得，这不好。颤抖的手伸向*花动漫。\n入眼的是不堪入目的广告，搜索以后发现，哈，加载不出来。\n😭\n我又幻想了，幻想自己活在一个有学园偶像的世界。实际只是被IB强*致死前的幻想罢了。\n就在这时，我想到，万能的API。。。肯定有大佬实装了！（等等这用词\n激动的心，我搜到了。\n就决定是你了！！！OIAPI！！！\n但是API，很多人不知道，不会用。我仿佛想到B站上有人会说：\n”主播主播，你找到的API的确很强力，但还是太吃操作了“\n”有没有更加简单的方法？“\n有的，兄弟，有的，这样的还有九一个\n就是用我（用GPT和大佬的API）编的，包没广告的，山寨*花动漫 Anime Browser！！！！！\nhttps://itsuyo.top/anime-browser/\n\n顺便可以看一下Tools工具界面，里面还有更多其他工具哦~\n","categories":["重要告示"],"tags":["工具"]},{"title":"MTC漫音社：宣传第一弹！","url":"/2024/10/12/%E6%BC%AB%E9%9F%B3%E7%A4%BEMTC%E5%AE%A3%E4%BC%A0/","content":"MTC漫音社简介欢迎访问 MTC漫音社 的官方网站！作为一个有着多年历史的国际部的扛把子二次元社团！看过日漫的多少应该都羡慕里面的一些社团吧，CL的演剧部凉宫的SOS团啥的，，咱学校感觉好多人搞社团都很有目的性，要么为了彰显自己啥leadership ability要么申大学啥的，社团都变成牟hour和经验的工具了-这绝对不是我们想在漫音看到的！\n我们希望的是组建一个能让大家有归属感，像个大家庭一样的社团！，所以请大家，作为我们的家庭成员()，绝对不要拘谨！有啥事就说，有什么想分享的直接发，咱这人都挺好的（虽然偶尔开开车看着不正经hhh）。\n希望这里的高年级老登们都可以善待新人，多多交流，低年级的各位也请放心参加我们的社团活动，多和孤独的我们交流啦！非常感谢能看到这里！\n漫音里面啥圈子都有的，绝对能找到你的同好，请相信我们的多样性和浓度哈哈哈哈\n\n我们的团队主要负责人\n社长: Horus联系方式: Horus_YEE\n副社长: QiiQ联系方式: jasperSHSID\n\n\n成员展示优秀成员\nHorus: 领导我社于10&#x2F;10义卖会上获得了1784元的营业额\nJasper: 技术宅拯救世界\n\n典型恶劣成员\nRio: 踢人，不愿意女装，每天导管\n\n\n加入我们如果你对我们的社团感兴趣，请填写加入申请表。加入我们，开启你的新旅程！\n","categories":["MTC"],"tags":["社团宣传","社团活动"]},{"title":"更新了Tools页面！","url":"/2024/09/09/%E6%9B%B4%E6%96%B0%E4%BA%86Tools%E9%A1%B5%E9%9D%A2%EF%BC%81/","content":"\n\n\n在左侧菜单栏中新加入了Tools页面！我将会在里面共享一些我制作的小工具，以及我作为一个动漫迷兼编程新手收藏的有趣的或有用的站点等，但愿能对你有帮助~！\n会持续更新~\n","categories":["重要告示"],"tags":["更新","工具"]},{"title":"第一篇博客喵","url":"/2024/09/06/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%96%B5/","content":"可爱的二次元世界欢迎来到我的二次元世界！这里充满了奇幻与梦想，让我们一起探索吧！\n🌸 角色介绍🧚‍♀️ 萝莉精灵 - 艾莉丝艾莉丝是一位天真可爱的精灵，她的笑容能融化一切烦恼。她喜欢 花朵 和 甜点，特别是草莓蛋糕！\n\n年龄: 150岁（看起来像15岁）\n爱好: 编织花环、飞翔\n座右铭: “用心感受世界的美好”\n\n🦄 神秘少年 - 凯尔凯尔是一位神秘的少年，擅长剑术和魔法。他冷酷而又温柔，总是能在关键时刻出现。\n\n年龄: 17岁\n爱好: 练习剑术、阅读古籍\n座右铭: “不论黑暗，终将迎来黎明”\n\n✨ 魔法世界的规则\n魔法：每个人都可以学习基本的魔法，掌握高级魔法需要时间和努力。\n冒险：勇敢的冒险者会获得无尽的财富和荣誉，但也要小心危险。\n友情：在二次元的世界里，友情比什么都重要。\n\n📚 推荐动漫\n《爱丽丝梦游仙境》 - 描述了艾莉丝的奇幻冒险。\n《剑与魔法的传说》 - 讲述凯尔的传奇故事。\n《梦幻花园》 - 一部温馨的花卉动画片。\n\n🎉 互动时间有什么问题或者想聊的内容吗？留言告诉我吧！\n&lt;details&gt;&lt;summary&gt;点击展开更多内容&lt;/summary&gt;这里可以放置更多的内容，比如隐藏的彩蛋或者小知识哦！&lt;/details&gt;","categories":["试验文章"],"tags":["废话"]},{"title":"Uma Card Maker 重构升级！","url":"/2025/04/22/Uma-Card-Maker-%E9%87%8D%E6%9E%84%E5%8D%87%E7%BA%A7%EF%BC%81/","content":"细心的朋友们大概注意到了以前Uma Card Maker其实边框形状没那么好。。。总之就是有问题\n这一次就当练习（中间甚至丢了几次文件），重新抠了图等等，同时用AI工具之类的把一些有点糊的icon清晰度调高了\n所以现在效果更好啦！欢迎来玩~\n（顺便还改了博客架构，这个debug好烦）\n点我跳转\n","categories":["重要告示"],"tags":["更新","工具"]},{"title":"IB倒计时","url":"/2025/04/23/IB%E5%80%92%E8%AE%A1%E6%97%B6/","content":"转眼间，IB大考已纷至沓来，两年，乃至说是十二年的奋斗将在一个月内画上暂时的句号。\n这段略有不堪的，令人回味的经历就这么地沉睡在了昨天，而我们将带着梦想走向未来。\n百感交集。\n祝大家好运。\n\n  \n    查看倒计时\n  \n\n\n\n  /* 为链接添加悬停效果 */\n  a:hover {\n    text-decoration: underline;\n    text-shadow: 0 0 8px rgba(255, 215, 0, 0.6);\n    transition: all 0.3s ease;\n  }\n","categories":["重要告示"],"tags":["工具"]},{"title":"Anime Browser bug修复 + UI升级~","url":"/2025/06/03/Anime-Browser-bug%E4%BF%AE%E5%A4%8D-UI%E5%8D%87%E7%BA%A7/","content":"更新了Anime Browser的UI（全是AI的功劳，感谢deepseek大鲸鱼）\n修复了之前百分百报错（）的问题（也是大鲸鱼）\n有一说一我害怕前端真的要失业了，这个UI真的编的。。。太牛了；加上我之前也用过python的gradio，结合AI指导，很快就能手搓一个很专业的UI，太恐怖了。。。\n\n基本上就是，你有一点基础，能找到一开始版本的bug然后让它一点点改，很快就能整出一个像模像样的UI\n太恐怖了，真的\n期待。\n","categories":["重要告示"],"tags":["更新","工具"]},{"title":"Resources","url":"/Resources/index.html","content":"\n如果发现有链接失效。。。我也不知道怎么能联系到我嘿嘿，要么B站私信？右边有我的B站主页按钮~\n\n欢迎来到我的资源分享页面！平时大多数资源（比如训练好的模型啊啥的）都会放在这里，和工具页面分开来放~\n右边有目录的，目录分类点击就能跳转！当然也可以直接ctrl+F搜索整页里面的关键词。\n对了，偷偷告诉你，百度网盘很多时候没SVIP下载慢的话可以去淘宝几角钱租一个SVIP共享号的，挺好用\n赛马娘 GPT_SoVITS 模型\n这部分是马娘的GPT_SoVITS模型，我训练的。不会用的小白具体教程可以看_（待更新）_（或者B站搜个视频嘛，不难的）。\n\n\n注意哦，因为我也是这方面的新手，所以很多训练出来可能差强人意。。。一些我在之后听着不好以及实力上升更加懂了以后会再改的！\n\n\n\n\n模型名\n描述\n百度网盘\nGoogle Drive\n\n\n\nDaiwa_Scarlet_V2 \n大和赤骥的GPT_SoVITS的v2模型~这是我第一个炼的模型，所以可能效果有待提升，不过感觉也还可以嘿嘿。大和。。。想和你马儿跳\n点我\n点我\n\n\nKitasan_Black_V2 \n北部玄驹的GPT_SoVITS的v2模型~ 哈利ki得一go!\n点我\n点我\n\n\nSatono_Diamond_V2 \n里见光钻的GPT_SoVITS的v2模型~ 钻哥你什么时候带我走啊啊啊\n点我\n点我\n\n\nWonder_Acute_V2 \n奇锐骏的GPT_SoVITS的v2模型~ 你的奶奶，可可爱爱（bushi\n点我\n点我\n\n\n\n蔚蓝档案 GPT_SoVITS 模型\n这部分是Blue Archive蓝色原神蔚蓝档案的GPT_SoVITS模型，我训练的。不会用的小白具体教程可以看_（待更新）_（或者B站搜个视频嘛，不难的）。\n\n\n还是那句话，因为我也是这方面的新手，所以很多训练出来可能差强人意。。。一些我在之后听着不好以及实力上升更加懂了以后会再改的！\n\n\n\n\n模型名\n描述\n百度网盘\nGoogle Drive\n\n\n\nAtsuko_V2 \n秤亚津子的GPT_SoVITS的v2模型~炼的时候还不太熟练参数，所以可能效果有待提升，不过感觉也还可以嘿嘿。笑\n点我\n点我\n\n\n以后会持续更新！\n"},{"url":"/anime-browser/index.html","content":"\n\n\n    \n    \n    动漫信息查询-2.0\n    \n    \n            /* 新增返回按钮样式 */\n        .home-link {\n            position: fixed;\n            left: 20px;\n            top: 20px;\n            display: flex;\n            align-items: center;\n            text-decoration: none;\n            color: white; /* 白色文字在深色背景上更显眼 */\n            font-size: 16px;\n            z-index: 1000;\n            transition: all 0.3s ease;\n            background: rgba(138, 43, 226, 0.8); /* 使用主题紫色 */\n            padding: 8px 15px;\n            border-radius: 30px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n            font-weight: 500;\n        }\n\n        .home-link img {\n            width: 24px;\n            height: 24px;\n            margin-right: 8px;\n        }\n\n        .home-link:hover {\n            background: rgba(106, 28, 185, 0.9); /* 深紫色悬停效果 */\n            transform: translateY(-2px);\n            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);\n        }\n\n        /* 调整容器位置，避免按钮遮挡 */\n        .container {\n            padding-top: 70px; /* 新增顶部间距 */\n        }\n\n        /* 移动端适配 */\n        @media (max-width: 768px) {\n            .home-link {\n                left: 10px;\n                top: 10px;\n                font-size: 14px;\n                padding: 6px 12px;\n            }\n\n            .home-link img {\n                width: 20px;\n                height: 20px;\n            }\n\n            .container {\n                padding-top: 60px; /* 移动端减少间距 */\n            }\n        }\n\n        /* 确保模态框不会覆盖按钮 */\n        .modal {\n            z-index: 999; /* 低于按钮的z-index */\n        }\n\n        /* 样式保持不变 */\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        :root {\n            --primary: #8a2be2;\n            --primary-dark: #6a1cb9;\n            --secondary: #ff6b6b;\n            --dark: #1a1a2e;\n            --light: #f8f9fa;\n            --gray: #6c757d;\n            --success: #28a745;\n            --card-bg: #ffffff;\n            --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n        }\n\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background: linear-gradient(135deg, #1a1a2e, #16213e);\n            color: #333;\n            line-height: 1.6;\n            min-height: 100vh;\n            padding: 20px;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n        }\n\n        header {\n            text-align: center;\n            padding: 30px 0;\n            margin-bottom: 30px;\n            color: white;\n            animation: fadeInDown 0.8s ease;\n        }\n\n        header h1 {\n            font-size: 2.8rem;\n            margin-bottom: 10px;\n            background: linear-gradient(45deg, #ff6b6b, #8a2be2);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        header p {\n            font-size: 1.2rem;\n            max-width: 700px;\n            margin: 0 auto;\n            color: #e0e0ff;\n        }\n\n        .search-section {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 15px;\n            padding: 25px;\n            box-shadow: var(--card-shadow);\n            margin-bottom: 30px;\n            animation: fadeInUp 0.8s ease;\n        }\n\n        .input-area {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 15px;\n            align-items: center;\n        }\n\n        .input-group {\n            flex: 1;\n            min-width: 250px;\n        }\n\n        .input-group label {\n            display: block;\n            margin-bottom: 8px;\n            font-weight: 600;\n            color: var(--dark);\n        }\n\n        input, select, button {\n            padding: 14px 18px;\n            font-size: 16px;\n            border: 2px solid #e0e0e0;\n            border-radius: 10px;\n            width: 100%;\n            transition: all 0.3s ease;\n        }\n\n        input:focus, select:focus {\n            border-color: var(--primary);\n            outline: none;\n            box-shadow: 0 0 0 3px rgba(138, 43, 226, 0.2);\n        }\n\n        button {\n            background: linear-gradient(135deg, var(--primary), var(--primary-dark));\n            color: white;\n            border: none;\n            cursor: pointer;\n            font-weight: 600;\n            letter-spacing: 0.5px;\n            transition: all 0.3s ease;\n            box-shadow: 0 4px 15px rgba(138, 43, 226, 0.3);\n        }\n\n        button:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 6px 20px rgba(138, 43, 226, 0.4);\n        }\n\n        button:active {\n            transform: translateY(-1px);\n        }\n\n        .results-section {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 25px;\n            margin-bottom: 40px;\n        }\n\n        .anime-card {\n            background: var(--card-bg);\n            border-radius: 15px;\n            overflow: hidden;\n            box-shadow: var(--card-shadow);\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n            cursor: pointer;\n            animation: fadeIn 0.5s ease;\n        }\n\n        .anime-card:hover {\n            transform: translateY(-10px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n        }\n\n        .anime-image {\n            width: 100%;\n            height: 320px;\n            object-fit: cover;\n            border-bottom: 3px solid var(--primary);\n        }\n\n        .anime-info {\n            padding: 20px;\n        }\n\n        .anime-info h3 {\n            font-size: 1.4rem;\n            margin-bottom: 10px;\n            color: var(--dark);\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n\n        .anime-meta {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 15px;\n            font-size: 0.9rem;\n            color: var(--gray);\n        }\n\n        .anime-meta span {\n            background: #f0f0f0;\n            padding: 4px 10px;\n            border-radius: 20px;\n            font-weight: 500;\n        }\n\n        .anime-stats {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 10px;\n            font-size: 0.95rem;\n        }\n\n        .anime-stats div {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n        }\n\n        .anime-stats i {\n            color: var(--primary);\n            font-size: 1.1rem;\n        }\n\n        .loading-overlay {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.85);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 1200;\n            flex-direction: column;\n            color: white;\n            display: none;\n        }\n\n        .spinner {\n            width: 70px;\n            height: 70px;\n            border: 5px solid rgba(255, 255, 255, 0.3);\n            border-radius: 50%;\n            border-top-color: var(--primary);\n            animation: spin 1s ease-in-out infinite;\n            margin-bottom: 20px;\n        }\n\n        .modal {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: white;\n            width: 90%;\n            max-width: 800px;\n            max-height: 90vh;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);\n            z-index: 1001;\n            display: none;\n            animation: modalIn 0.4s ease;\n        }\n\n        .modal-header {\n            background: linear-gradient(135deg, var(--primary), var(--primary-dark));\n            color: white;\n            padding: 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n\n        .modal-header h2 {\n            font-size: 1.8rem;\n            margin: 0;\n        }\n\n        .close-btn {\n            background: none;\n            border: none;\n            color: white;\n            font-size: 1.8rem;\n            cursor: pointer;\n            width: 40px;\n            height: 40px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-radius: 50%;\n            transition: background 0.3s;\n        }\n\n        .close-btn:hover {\n            background: rgba(255, 255, 255, 0.2);\n        }\n\n        .modal-content {\n            padding: 25px;\n            overflow-y: auto;\n            max-height: 65vh;\n        }\n\n        .anime-detail {\n            display: grid;\n            grid-template-columns: 1fr 2fr;\n            gap: 25px;\n            margin-bottom: 25px;\n        }\n\n        .detail-image {\n            width: 100%;\n            border-radius: 10px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n        }\n\n        .detail-info h3 {\n            font-size: 1.5rem;\n            margin-bottom: 15px;\n            color: var(--dark);\n        }\n\n        .detail-meta {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n            gap: 15px;\n            margin-bottom: 20px;\n        }\n\n        .meta-item {\n            background: #f8f9fa;\n            padding: 12px;\n            border-radius: 8px;\n            border-left: 4px solid var(--primary);\n        }\n\n        .meta-item strong {\n            display: block;\n            color: var(--gray);\n            font-size: 0.9rem;\n            margin-bottom: 5px;\n        }\n\n        .episode-list {\n            margin-top: 20px;\n        }\n\n        .episode-list h4 {\n            font-size: 1.3rem;\n            margin-bottom: 15px;\n            padding-bottom: 10px;\n            border-bottom: 2px solid #f0f0f0;\n            color: var(--dark);\n        }\n\n        .episodes {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n            gap: 12px;\n        }\n\n        .episode {\n            background: #f0f0f0;\n            padding: 12px;\n            text-align: center;\n            border-radius: 8px;\n            cursor: pointer;\n            transition: all 0.2s ease;\n            font-weight: 500;\n        }\n\n        .episode:hover {\n            background: var(--primary);\n            color: white;\n            transform: translateY(-3px);\n            box-shadow: 0 5px 15px rgba(138, 43, 226, 0.3);\n        }\n\n        .empty-state {\n            text-align: center;\n            padding: 50px 25px; /* 增加左右内边距 */\n            background: white;\n            border-radius: 15px;\n            box-shadow: var(--card-shadow);\n            grid-column: 1 / -1; /* 关键修改：使空状态跨越所有列 */\n        }\n\n        .empty-state i {\n            font-size: 4rem;\n            color: #e0e0e0;\n            margin-bottom: 20px;\n        }\n\n        .empty-state h3 {\n            font-size: 1.8rem;\n            margin-bottom: 15px;\n            color: var(--dark);\n        }\n\n        .empty-state p {\n            font-size: 1.1rem;\n            color: var(--gray);\n            max-width: 600px;\n            margin: 0 auto;\n            line-height: 1.8;\n        }\n\n        .notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            padding: 15px 25px;\n            border-radius: 10px;\n            background: var(--primary);\n            color: white;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            transform: translateX(150%);\n            transition: transform 0.3s ease;\n            z-index: 1002;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n\n        .notification.show {\n            transform: translateX(0);\n        }\n\n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n\n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(20px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n\n        @keyframes fadeInDown {\n            from { opacity: 0; transform: translateY(-30px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n\n        @keyframes fadeInUp {\n            from { opacity: 0; transform: translateY(30px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n\n        @keyframes modalIn {\n            from { opacity: 0; transform: translate(-50%, -60%); }\n            to { opacity: 1; transform: translate(-50%, -50%); }\n        }\n\n        @media (max-width: 768px) {\n            .anime-detail {\n                grid-template-columns: 1fr;\n            }\n\n            .input-area {\n                flex-direction: column;\n            }\n\n            .input-group {\n                width: 100%;\n            }\n\n            header h1 {\n                font-size: 2.2rem;\n            }\n\n            .modal {\n                width: 95%;\n            }\n        }\n    \n\n\n    \n        返回主站\n    \n    \n        \n             动漫信息查询\n            搜索您喜爱的动漫，获取详细信息、剧集列表和播放链接\n        \n\n        \n            \n                \n                     动漫名称\n                    \n                \n\n                \n                     选择线路\n                    \n                        线路 1\n                        线路 2\n                        线路 3\n                    \n                \n\n                \n                    &nbsp;\n                    \n                         查询动漫\n                    \n                \n            \n        \n\n        \n            \n                \n                动漫查询工具\n                在搜索框中输入您想查询的动漫名称，选择线路后点击查询按钮\n                搜索结果将显示在这里，点击动漫卡片可查看详情和剧集列表\n                如果报错了的话，先多试几次（推荐5次，很看API心情）~！有的时候多点几次就又可以了\n                \n                     提示：每次点击按钮和其他操作，点一次就够了！不要狂点！\n                \n            \n        \n    \n\n    \n        \n        正在加载，请稍候...\n    \n\n    \n        \n            动漫详情\n            &times;\n        \n        \n            \n        \n    \n\n    \n        \n        操作成功！\n    \n\n    \n        // 当前状态变量\n        let currentLoading = null;\n        let currentAnimeName = '';\n        let currentLineType = 1;\n        let currentNIndex = 0;\n\n        // 显示通知\n        function showNotification(message, isError = false) {\n            const notification = document.getElementById('notification');\n            const text = document.getElementById('notification-text');\n\n            text.textContent = message;\n            notification.style.background = isError ? '#ff6b6b' : '#8a2be2';\n\n            notification.classList.add('show');\n\n            setTimeout(() => {\n                notification.classList.remove('show');\n            }, 3000);\n        }\n\n        // 显示加载状态\n        function showLoading(text = '正在加载，请稍候...') {\n            const loading = document.getElementById('loading');\n            const loadingText = document.getElementById('loading-text');\n\n            loadingText.textContent = text;\n            loading.style.display = 'flex';\n            currentLoading = loading;\n        }\n\n        // 隐藏加载状态\n        function hideLoading() {\n            if (currentLoading) {\n                currentLoading.style.display = 'none';\n                currentLoading = null;\n            }\n        }\n\n        // 关闭模态框\n        function closeModal() {\n            document.getElementById('detailModal').style.display = 'none';\n        }\n\n        // 获取动漫数据 - 修复版\n        async function fetchAnimeData() {\n            const animeName = document.getElementById('animeName').value.trim();\n            if (!animeName) {\n                showNotification('请输入动漫名称', true);\n                return;\n            }\n\n            currentAnimeName = animeName;\n            currentLineType = document.getElementById('lineType').value;\n\n            showLoading('正在搜索动漫...');\n\n            try {\n                const url = 'https://oiapi.net/API/Anime';\n                const params = new URLSearchParams({\n                    msg: animeName,\n                    n: 0,\n                    j: 0,\n                    type: currentLineType\n                });\n\n                // 添加时间戳防止缓存\n                const fullUrl = `${url}?${params}&t=${Date.now()}`;\n\n                // 使用CORS代理解决跨域问题\n                const proxyUrl = `https://api.allorigins.win/get?url=${encodeURIComponent(fullUrl)}`;\n\n                const response = await fetch(proxyUrl);\n\n                // 解析代理响应\n                const proxyData = await response.json();\n\n                // 检查代理响应是否包含原始内容\n                if (!proxyData.contents) {\n                    throw new Error('代理服务返回无效数据');\n                }\n\n                // 解析原始API响应\n                const data = JSON.parse(proxyData.contents);\n\n                // 新增：打印搜索结果的完整JSON数据\n                console.log(\"[搜索动漫列表] 返回的完整JSON数据:\", data);\n\n                if (data.code === 200) {\n                    displayAnimeList(data.data);\n                    showNotification(`找到 ${data.data.length} 部相关动漫`);\n                } else {\n                    showNotification(data.msg || '查询失败，请重试', true);\n                }\n            } catch (error) {\n                console.error('请求异常:', error);\n                showNotification(`请求异常: ${error.message}`, true);\n            } finally {\n                hideLoading();\n            }\n        }\n\n        // 显示动漫列表\n        function displayAnimeList(animeList) {\n            const resultsArea = document.getElementById('resultsArea');\n            resultsArea.innerHTML = '';\n\n            if (!animeList || animeList.length === 0) {\n                resultsArea.innerHTML = `\n                    \n                        \n                        未找到相关动漫\n                        没有找到与\"${currentAnimeName}\"相关的动漫，请尝试其他关键词\n                    \n                `;\n                return;\n            }\n\n            animeList.forEach((anime, index) => {\n                const animeCard = document.createElement('div');\n                animeCard.className = 'anime-card';\n                animeCard.innerHTML = `\n                    \n                    \n                        ${anime.name}\n                        \n                            ${anime.year || '未知年份'}\n                            ${anime.ji || '状态未知'}\n                        \n                    \n\n\n\n\n\n\n                    \n                `;\n                animeCard.onclick = () => showAnimeDetails(index + 1);\n                resultsArea.appendChild(animeCard);\n            });\n        }\n\n        // 显示动漫详情\n        async function showAnimeDetails(nIndex) {\n            currentNIndex = nIndex;\n            showLoading('正在加载动漫详情...');\n\n            try {\n                const url = 'https://oiapi.net/API/Anime';\n                const params = new URLSearchParams({\n                    msg: currentAnimeName,\n                    n: nIndex,\n                    j: 0,\n                    type: currentLineType\n                });\n\n                // 添加时间戳防止缓存\n                const fullUrl = `${url}?${params}&t=${Date.now()}`;\n\n                // 使用CORS代理解决跨域问题\n                const proxyUrl = `https://api.allorigins.win/get?url=${encodeURIComponent(fullUrl)}`;\n\n                const response = await fetch(proxyUrl);\n\n                // 解析代理响应\n                const proxyData = await response.json();\n\n                // 检查代理响应是否包含原始内容\n                if (!proxyData.contents) {\n                    throw new Error('代理服务返回无效数据');\n                }\n\n                // 解析原始API响应\n                const data = JSON.parse(proxyData.contents);\n\n                // 新增：打印动漫详情的完整JSON数据\n                console.log(`[动漫详情] ${currentAnimeName} 的完整JSON数据:`, data);\n\n                if (data.code === 200) {\n                    openAnimeDetailWindow(data.data, nIndex);\n                } else {\n                    showNotification(data.msg || '获取详情失败', true);\n                }\n            } catch (error) {\n                console.error('请求异常:', error);\n                showNotification(`请求异常: ${error.message}`, true);\n            } finally {\n                hideLoading();\n            }\n        }\n\n        // 打开动漫详情窗口\n        function openAnimeDetailWindow(animeData, nIndex) {\n            const modal = document.getElementById('detailModal');\n            const modalTitle = document.getElementById('modal-title');\n            const modalContent = document.getElementById('modal-content');\n\n            modalTitle.textContent = animeData.name;\n\n            modalContent.innerHTML = `\n                \n                    \n                    \n                    \n                        ${animeData.name}\n                        \n                            \n                                类别\n                                ${animeData.class || '未分类'}\n                            \n                            \n                                标签\n                                ${animeData.tags || '无'}\n                            \n                            \n                                状态\n                                ${animeData.ji || '未知'}\n                            \n                            \n                                年份\n                                ${animeData.year || '未知'}\n                            \n                            \n                                国家\n                                ${animeData.country || '未知'}\n                            \n                            \n                                评分\n                                ${animeData.score || '暂无'}\n                            \n                        \n                        \n                            简介\n                            ${animeData.desc || '暂无简介'}\n                        \n                    \n                \n                \n                     剧集列表\n                    \n                \n            `;\n\n            const episodeList = document.getElementById('episodeList');\n            animeData.playlist.forEach((ep, idx) => {\n                const episode = document.createElement('div');\n                episode.className = 'episode';\n                episode.textContent = ep;\n                episode.onclick = () => handleEpisodeClick(nIndex, idx + 1);\n                episodeList.appendChild(episode);\n            });\n\n            modal.style.display = 'block';\n        }\n\n        // 处理剧集点击\n        async function handleEpisodeClick(nIndex, episodeIndex) {\n            showLoading('正在获取播放链接...');\n\n            try {\n                const url = 'https://oiapi.net/API/Anime';\n                const params = new URLSearchParams({\n                    msg: currentAnimeName,\n                    n: nIndex,\n                    j: episodeIndex,\n                    type: currentLineType\n                });\n\n                // 添加时间戳防止缓存\n                const fullUrl = `${url}?${params}&t=${Date.now()}`;\n\n                // 使用CORS代理解决跨域问题\n                const proxyUrl = `https://api.allorigins.win/get?url=${encodeURIComponent(fullUrl)}`;\n\n                const response = await fetch(proxyUrl);\n\n                // 解析代理响应\n                const proxyData = await response.json();\n\n                // 检查代理响应是否包含原始内容\n                if (!proxyData.contents) {\n                    throw new Error('代理服务返回无效数据');\n                }\n\n                // 解析原始API响应\n                const data = JSON.parse(proxyData.contents);\n\n                // 新增：打印剧集播放链接的完整JSON数据\n                console.log(`[剧集播放链接] ${currentAnimeName} 第${episodeIndex}集的完整JSON数据:`, data);\n\n                if (data.code === 200) {\n                    showEpisodeDetails(data.data);\n                } else {\n                    showNotification(data.msg || '获取播放链接失败', true);\n                }\n            } catch (error) {\n                console.error('请求异常:', error);\n                showNotification(`请求异常: ${error.message}`, true);\n            } finally {\n                hideLoading();\n            }\n        }\n\n        // 显示剧集详情\n        function showEpisodeDetails(episodeData) {\n            const modal = document.getElementById('detailModal');\n            const modalTitle = document.getElementById('modal-title');\n            const modalContent = document.getElementById('modal-content');\n\n            modalTitle.textContent = `${episodeData.name} - ${episodeData.play_num}`;\n\n            modalContent.innerHTML = `\n                \n                    ${episodeData.name} - ${episodeData.play_num}\n                    \n                         视频类型: ${episodeData.video_type || '未知'}\n                    \n\n                    ${episodeData.play_url ? `\n                        \n                             点击播放\n                        \n                        \n                            如果播放页面没有自动打开，请检查浏览器是否阻止了弹出窗口\n                        \n                    ` : `\n                        \n                            \n                            暂无播放链接\n                            当前剧集暂时没有可用的播放链接，请尝试其他剧集或线路\n                        \n                    `}\n                \n            `;\n\n            modal.style.display = 'block';\n\n            // 如果有播放链接，自动在新标签页打开\n            if (episodeData.play_url) {\n                setTimeout(() => {\n                    window.open(episodeData.play_url, '_blank');\n                }, 500);\n            }\n        }\n\n        // 初始化：为输入框添加回车键支持\n        document.getElementById('animeName').addEventListener('keypress', (e) => {\n            if (e.key === 'Enter') {\n                fetchAnimeData();\n            }\n        });\n    \n\n"},{"title":"Tools","url":"/tools/index.html","content":"欢迎来到我的工具页面！以下都是我做的一些小工具&#x2F;程序和收藏的网站，包括一些变成上的常见的问题的解答之类的，如果对你有帮助的话荣幸至极！\nItsuyoの工坊\n\n\n工具\n描述\n\n\n\nUma Card Maker \n简便的赛马娘支援卡DIY制作器，支持基础的编辑与下载\n\n\nPic_Hide_Barcode \n在一张普通图片里隐藏二维码，可以被微信识别。我改的，功能更多一点。注意，在ios上成功率高，其他的上面有不小概率失败。\n\n\nAnime_Browser \n寻找免费动漫源！\n\n\n如果感兴趣的话可以点击超链接去看看喵~以后会持续更新！\n\n值得书签一些我觉得很有意思的网站与工具~\n持续更新~\n\n编程FAQ一些我在编程途中经常遇到要查的问题~\n持续更新~\n"},{"title":"About","url":"/about/index.html","content":"敬请期待~\n"},{"url":"/uma/index.html","content":"\n\n\n    \n        (function(c,l,a,r,i,t,y){\n            c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};\n            t=l.createElement(r);t.async=1;t.src=\"https://www.clarity.ms/tag/\"+i;\n            y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);\n        })(window, document, \"clarity\", \"script\", \"m7r9awlm9v\");\n    \n    \n    \n    Uma Card Maker\n    \n    \n    \n\n\n\n\n\n    \n        ..\n    \n    Uma Card Maker\n    \n        ..\n    \n\n\n\n赛马娘支援卡制作器\n\n\n\n\n\n\n    \n        \n            \n                \n            \n            \n                \n                \n                \n                \n            \n        \n    \n\n    \n        图片选择\n        图片缩放\n        \n            -\n            \n            +\n        \n        图片翻转\n        支援卡属性\n        \n            速度\n            耐力\n            力量\n            毅力\n            智力\n            友人\n            团队\n        \n        支援卡品级\n        \n            SSR\n            SR\n            R\n        \n        下载支援卡\n    \n\n\n\n    ?\n    \n    \n        \n            &times;\n            使用指南\n            \n                欢迎使用 赛马娘支援卡制作器 (Uma Card Maker) 喵~基本的功能如下：\n                \n                    可以上传图片并在支持卡上进行缩放、拖动、翻转等操作。\n                    可以选择支持卡的属性和品级，以及预览最终效果。\n                    右上角的是github repo链接哦~\n                \n            \n            使用指南：\n            \n                上传图片：点击 \"图片选择\" 按钮，选择你想要制作的支持卡的图片。支持的图片格式包括 JPG、PNG 等。\n                编辑支持卡：图片上传后，你可以在支持卡上进行缩放、拖动、翻转等操作。\n                选择支持卡属性和品级：使用下拉菜单选择支持卡的属性（速度、耐力、力量、毅力、智力、友人、团队）和品级（SSR、SR、R）。\n                预览和下载：在编辑完成后，你可以预览支持卡的最终效果，并点击 \"下载支援卡\" 按钮将支持卡保存到你的设备上。\n                GitHub 仓库链接：点击页面右上角的 GitHub 图标，访问应用程序的 GitHub 仓库，查看源代码并提出建议或报告问题。\n                需要帮助？：如果有什么bug的话，欢迎在github issues部分里面告诉我！\n            \n            \n                - Abyss Seeker\n            \n        \n    \n\n\n\n\n\n\n\n\n"},{"url":"/uma/package-lock.json","content":"{\"name\":\"UmaCardMaker\",\"lockfileVersion\":3,\"requires\":true,\"packages\":{\"\":{\"dependencies\":{\"html2canvas\":\"^1.4.1\"}},\"node_modules/base64-arraybuffer\":{\"version\":\"1.0.2\",\"resolved\":\"https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-1.0.2.tgz\",\"integrity\":\"sha512-I3yl4r9QB5ZRY3XuJVEPfc2XhZO6YweFPI+UovAzn+8/hb3oJ6lnysaFcjVpkCPfVWFUDvoZ8kmVDP7WyRtYtQ==\",\"engines\":{\"node\":\">= 0.6.0\"}},\"node_modules/css-line-break\":{\"version\":\"2.1.0\",\"resolved\":\"https://registry.npmjs.org/css-line-break/-/css-line-break-2.1.0.tgz\",\"integrity\":\"sha512-FHcKFCZcAha3LwfVBhCQbW2nCNbkZXn7KVUJcsT5/P8YmfsVja0FMPJr0B903j/E69HUphKiV9iQArX8SDYA4w==\",\"dependencies\":{\"utrie\":\"^1.0.2\"}},\"node_modules/html2canvas\":{\"version\":\"1.4.1\",\"resolved\":\"https://registry.npmjs.org/html2canvas/-/html2canvas-1.4.1.tgz\",\"integrity\":\"sha512-fPU6BHNpsyIhr8yyMpTLLxAbkaK8ArIBcmZIRiBLiDhjeqvXolaEmDGmELFuX9I4xDcaKKcJl+TKZLqruBbmWA==\",\"dependencies\":{\"css-line-break\":\"^2.1.0\",\"text-segmentation\":\"^1.0.3\"},\"engines\":{\"node\":\">=8.0.0\"}},\"node_modules/text-segmentation\":{\"version\":\"1.0.3\",\"resolved\":\"https://registry.npmjs.org/text-segmentation/-/text-segmentation-1.0.3.tgz\",\"integrity\":\"sha512-iOiPUo/BGnZ6+54OsWxZidGCsdU8YbE4PSpdPinp7DeMtUJNJBoJ/ouUSTJjHkh1KntHaltHl/gDs2FC4i5+Nw==\",\"dependencies\":{\"utrie\":\"^1.0.2\"}},\"node_modules/utrie\":{\"version\":\"1.0.2\",\"resolved\":\"https://registry.npmjs.org/utrie/-/utrie-1.0.2.tgz\",\"integrity\":\"sha512-1MLa5ouZiOmQzUbjbu9VmjLzn1QLXBhwpUa7kdLUQK+KQ5KA9I1vk5U4YHe/X2Ch7PYnJfWuWT+VbuxbGwljhw==\",\"dependencies\":{\"base64-arraybuffer\":\"^1.0.2\"}}}}"},{"url":"/uma/README.html","content":"\n    \n        Uma Card Maker\n        \n    \n\n\n赛马娘支援卡制作器: https://abyss-seeker.github.io/Uma-Card-Maker \n使用指南\n            \n                欢迎使用 赛马娘支援卡制作器 (Uma Card Maker) 喵~基本的功能如下：\n                \n                    可以上传图片并在支持卡上进行缩放、拖动、翻转等操作。\n                    可以选择支持卡的属性和品级，以及预览最终效果。\n                    右上角的是github repo链接哦~\n                \n            \n            使用指南：\n            \n                上传图片：点击 \"图片选择\" 按钮，选择你想要制作的支持卡的图片。支持的图片格式包括 JPG、PNG 等。\n                编辑支持卡：图片上传后，你可以在支持卡上进行缩放、拖动、翻转等操作。\n                选择支持卡属性和品级：使用下拉菜单选择支持卡的属性（速度、耐力、力量、毅力、智力、友人、团队）和品级（SSR、SR、R）。\n                预览和下载：在编辑完成后，你可以预览支持卡的最终效果，并点击 \"下载支援卡\" 按钮将支持卡保存到你的设备上。\n                GitHub 仓库链接：点击页面右上角的 GitHub 图标，访问应用程序的 GitHub 仓库，查看源代码并提出建议或报告问题。\n                需要帮助？：如果有什么bug的话，欢迎在github issues部分里面告诉我！\n            "},{"url":"/uma/script.js","content":"// script.js\ndocument.getElementById('uploadButton').addEventListener('click', function() {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    input.addEventListener('change', handleFileSelect);\n    input.click();\n});\n\nlet imgProps = {\n    offsetX: 0,\n    offsetY: 0,\n    scale: 1,\n    originalScale: 1 // 添加一个属性以存储原始缩放比例\n};\n\nlet img = null; // 用于存储当前图像的变量\nlet scaleInput = document.querySelector('.scale-input');\n\nwindow.onload = function() {\n    // 创建提示框元素\n    const alertBox = document.createElement('div');\n    alertBox.textContent = '！！！注意：如果你在使用微信/QQ等的内置浏览器，你可能无法下载图片！建议直接在浏览器中打开该网站。';\n    alertBox.classList.add('alert-box');\n    document.body.appendChild(alertBox);\n\n    // 在下一个动画帧中添加淡出效果\n    requestAnimationFrame(() => {\n        alertBox.style.opacity = '1'; // 淡入效果\n    });\n\n    // 设置定时器，在10秒后隐藏提示框\n    setTimeout(function() {\n        // 在下一个动画帧中添加淡出效果\n        requestAnimationFrame(() => {\n            alertBox.style.opacity = '0'; // 淡出效果\n        });\n        // 10秒后删除提示框\n        setTimeout(() => {\n            document.body.removeChild(alertBox);\n        }, 300);\n    }, 10000);\n};\n\n\nfunction handleFileSelect(event) {\n    const file = event.target.files[0];\n    if (file) {\n        const reader = new FileReader();\n        reader.onload = function(e) {\n            // 移除之前的图像\n            if (img) {\n                URL.revokeObjectURL(img.src);\n            }\n\n            img = new Image();\n            img.src = e.target.result;\n            img.onload = function() {\n                const canvas = document.getElementById('cardCanvas');\n                const ctx = canvas.getContext('2d');\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n                // 计算图像的宽高比\n                const aspectRatio = img.width / img.height;\n\n                // 确定是将图像的宽度还是高度适应到画布\n                if (img.width / canvas.width < img.height / canvas.height) {\n                    imgProps.scale = canvas.width / img.width;\n                } else {\n                    imgProps.scale = canvas.height / img.height;\n                }\n\n                // 设置原始缩放比例为当前缩放比例\n                imgProps.originalScale = imgProps.scale;\n\n                // 重置偏移量\n                imgProps.offsetX = 0;\n                imgProps.offsetY = 0;\n\n                // 更新输入框的值为初始缩放比例\n                scaleInput.value = (imgProps.scale * 100).toFixed(2);\n\n                // 在画布上绘制图像\n                redraw();\n            };\n        };\n        reader.readAsDataURL(file);\n    }\n}\n\n// 绘制圆角矩形的函数\nCanvasRenderingContext2D.prototype.roundRect = function(x, y, width, height, radius) {\n    this.beginPath();\n    this.moveTo(x + radius, y);\n    this.lineTo(x + width - radius, y);\n    this.quadraticCurveTo(x + width, y, x + width, y + radius);\n    this.lineTo(x + width, y + height - radius);\n    this.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    this.lineTo(x + radius, y + height);\n    this.quadraticCurveTo(x, y + height, x, y + height - radius);\n    this.lineTo(x, y + radius);\n    this.quadraticCurveTo(x, y, x + radius, y);\n    this.closePath();\n};\n\n// 重绘图像的函数\nfunction redraw() {\n    const canvas = document.getElementById('cardCanvas');\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.roundRect(0, 0, canvas.width, canvas.height, 20); // 调整半径以适应您的需求\n    ctx.clip(); // 裁剪 canvas 到圆角矩形\n    ctx.drawImage(img, imgProps.offsetX, imgProps.offsetY, img.width * imgProps.scale, img.height * imgProps.scale);\n}\n\n// 限制偏移量，使图像保持在画布范围内\nfunction limitOffset() {\n    const canvas = document.getElementById('cardCanvas');\n    imgProps.offsetX = Math.min(0, Math.max(canvas.width - img.width * imgProps.scale, imgProps.offsetX));\n    imgProps.offsetY = Math.min(0, Math.max(canvas.height - img.height * imgProps.scale, imgProps.offsetY));\n}\n\n// 允许拖动\nlet isDragging = false;\nlet startX, startY;\nlet canvas = document.getElementById('cardCanvas');\n\n// 检测是否是移动设备\nfunction iOS() {\n  return [\n    'iPad Simulator',\n    'iPhone Simulator',\n    'iPod Simulator',\n    'iPad',\n    'iPhone',\n    'iPod'\n  ].includes(navigator.platform)\n  // iPad on iOS 13 detection\n  || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n}\n\nconst isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent) || iOS();\n\n// 添加事件监听器\nif (isMobile) {\n    // 如果是移动设备，使用触摸事件\n    canvas.addEventListener('touchstart', function(e) {\n        isDragging = true;\n        startX = e.touches[0].clientX - imgProps.offsetX;\n        startY = e.touches[0].clientY - imgProps.offsetY;\n        e.preventDefault(); // 阻止默认的滑动行为\n    });\n\n    canvas.addEventListener('touchmove', function(e) {\n        if (isDragging) {\n            imgProps.offsetX = e.touches[0].clientX - startX;\n            imgProps.offsetY = e.touches[0].clientY - startY;\n            limitOffset(); // 更新拖动后的偏移量\n            redraw(); // 重新绘制图像\n            e.preventDefault(); // 阻止默认的滑动行为\n        }\n    });\n\n    canvas.addEventListener('touchend', function() {\n        isDragging = false;\n    });\n\n} else {\n    // 如果是电脑设备，使用鼠标事件\n    canvas.addEventListener('mousedown', function(e) {\n        isDragging = true;\n        startX = e.clientX - imgProps.offsetX;\n        startY = e.clientY - imgProps.offsetY;\n    });\n\n    canvas.addEventListener('mousemove', function(e) {\n        if (isDragging) {\n            imgProps.offsetX = e.clientX - startX;\n            imgProps.offsetY = e.clientY - startY;\n            limitOffset(); // 更新拖动后的偏移量\n            redraw(); // 重新绘制图像\n        }\n    });\n\n    canvas.addEventListener('mouseup', function() {\n        isDragging = false;\n    });\n}\n\n// 添加事件监听器\nif (isMobile) {\n    // 如果是移动设备，使用触摸事件\n    canvas.addEventListener('touchstart', function(e) {\n        if (!img) {\n            // 如果canvas为空，则阻止默认的滑动行为并弹出警告\n            e.preventDefault();\n            showAlarm(\"不可滑动，若要滑动网页请在该区域外（屏幕边缘/顶部）滑动\");\n            return;\n        }\n        isDragging = true;\n        startX = e.touches[0].clientX - imgProps.offsetX;\n        startY = e.touches[0].clientY - imgProps.offsetY;\n        e.preventDefault(); // 阻止默认的滑动行为\n    });\n\n    canvas.addEventListener('touchmove', function(e) {\n        if (isDragging) {\n            if (!img) {\n                // 如果canvas为空，则阻止默认的滑动行为并弹出警告\n                e.preventDefault();\n                showAlarm(\"不可滑动，若要滑动网页请在该区域外（屏幕边缘/顶部）滑动\");\n                return;\n            }\n            imgProps.offsetX = e.touches[0].clientX - startX;\n            imgProps.offsetY = e.touches[0].clientY - startY;\n            limitOffset(); // 更新拖动后的偏移量\n            redraw(); // 重新绘制图像\n            e.preventDefault(); // 阻止默认的滑动行为\n        }\n    });\n\n    canvas.addEventListener('touchend', function() {\n        isDragging = false;\n    });\n}\n\n// 弹出警告函数\nfunction showAlarm(message) {\n    // 创建提示框元素\n    const alertBox = document.createElement('div');\n    alertBox.textContent = message;\n    alertBox.classList.add('alert-box');\n    document.body.appendChild(alertBox);\n\n    // 在下一个动画帧中添加淡出效果\n    requestAnimationFrame(() => {\n        alertBox.style.opacity = '1'; // 淡入效果\n    });\n\n    // 设置定时器，在3秒后隐藏提示框\n    setTimeout(function() {\n        // 在下一个动画帧中添加淡出效果\n        requestAnimationFrame(() => {\n            alertBox.style.opacity = '0'; // 淡出效果\n        });\n        // 3秒后删除提示框\n        setTimeout(() => {\n            document.body.removeChild(alertBox);\n        }, 300);\n    }, 3000);\n}\n\n// 添加按钮事件监听器\ndocument.querySelector('.scale-controls button:first-child').addEventListener('click', function() {\n    scaleInput.value = parseFloat(scaleInput.value) - 1; // 递减1\n    updateScale();\n});\n\ndocument.querySelector('.scale-controls button:last-child').addEventListener('click', function() {\n    scaleInput.value = parseFloat(scaleInput.value) + 1; // 递增1\n    updateScale();\n});\n\n// 添加输入框事件监听器\nscaleInput.addEventListener('change', function() {\n    updateScale();\n});\n\n// 立绘翻转按钮事件监听器\ndocument.getElementById('flipButton').addEventListener('click', function() {\n    flipImage();\n});\n\n\n// 更新图像大小的函数\nfunction updateScale() {\n    const newScale = parseFloat(scaleInput.value) / 100; // 获取输入框的值并转换为小数形式\n    const initialScale = imgProps.originalScale; // 获取初始记录的缩放比例\n\n    // 如果输入的缩放比例小于初始记录的值，则将输入的值调整为初始记录的值\n    if (newScale < initialScale) {\n        scaleInput.value = (initialScale * 100).toFixed(2); // 将输入框的值设为初始记录的值\n\n        // 创建提示框元素\n        const alertBox = document.createElement('div');\n        alertBox.textContent = '图片不得过小';\n        alertBox.classList.add('alert-box');\n        document.body.appendChild(alertBox);\n\n        // 在下一个动画帧中添加淡出效果\n        requestAnimationFrame(() => {\n            alertBox.style.opacity = '1'; // 淡入效果\n        });\n\n        // 设置定时器，在3秒后隐藏提示框\n        setTimeout(function() {\n            // 在下一个动画帧中添加淡出效果\n            requestAnimationFrame(() => {\n                alertBox.style.opacity = '0'; // 淡出效果\n            });\n            // 3秒后删除提示框\n            setTimeout(() => {\n                document.body.removeChild(alertBox);\n            }, 300);\n        }, 3000);\n\n        imgProps.scale = initialScale;\n        imgProps.offsetX = 1;\n        imgProps.offsetY *= 1;\n\n        // 限制偏移量以确保图像保持在画布范围内\n        limitOffset();\n\n        // 重新绘制图像\n        redraw();\n\n        return; // 结束函数，不进行后续的操作\n    }\n\n    const scaleDiff = newScale / imgProps.scale; // 计算缩放比例变化\n\n    // 更新图像的缩放比例和偏移量\n    imgProps.scale = newScale;\n    imgProps.offsetX *= scaleDiff;\n    imgProps.offsetY *= scaleDiff;\n\n    // 限制偏移量以确保图像保持在画布范围内\n    limitOffset();\n\n    // 重新绘制图像\n    redraw();\n}\n\n// 图片翻转函数\nfunction flipImage() {\n    if (img) {\n        const canvas = document.getElementById('cardCanvas');\n        const ctx = canvas.getContext('2d');\n\n        // 清除画布\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        // 将图片水平翻转\n        ctx.translate(canvas.width, 0);\n        ctx.scale(-1, 1);\n\n        // 重新绘制图像\n        redraw();\n    }\n}\n\n// 获取select元素\nconst attributeSelect = document.getElementById('attributeSelect');\nconst gradeSelect = document.getElementById('gradeSelect');\n\n// 添加事件监听器\nattributeSelect.addEventListener('change', function() {\n    // 获取选中的属性值\n    const selectedAttribute = attributeSelect.value;\n\n    // 更新支援卡类型图片的src属性\n    const typeImg = document.querySelector('.type img');\n    typeImg.src = `images/card_type/${selectedAttribute}.png`;\n});\n\ngradeSelect.addEventListener('change', function() {\n    // 获取选中的品级值\n    const selectedGrade = gradeSelect.value;\n\n    // 更新边框和标签图片的src属性\n    const borderImg = document.querySelector('.border-overlay img');\n    const tagImg = document.querySelector('.tag img');\n    borderImg.src = `images/card_borders/${selectedGrade}.png`;\n    tagImg.src = `images/card_tag/${selectedGrade}.png`;\n});\n\n// 初始化时触发一次事件，以确保初始值对应的元素会被更新\nattributeSelect.dispatchEvent(new Event('change'));\ngradeSelect.dispatchEvent(new Event('change'));\n\n// 添加保存按钮功能\ndocument.getElementById('saveButton').addEventListener('click', function() {\n    saveCardPreview();\n});\n\n// 保存卡片预览功能\nfunction saveCardPreview() {\n    const cardPreview = document.querySelector('.border-container');\n    html2canvas(cardPreview, {\n        backgroundColor: null // 使用透明背景\n    }).then(canvas => {\n        // 创建一个链接\n        const link = document.createElement('a');\n        link.href = canvas.toDataURL(); // 将画布转换为数据 URL\n        link.download = 'card_preview.png'; // 设置下载文件名\n        link.click(); // 模拟点击链接进行下载\n    });\n    // 创建提示框元素\n    const alertBox = document.createElement('div');\n    alertBox.textContent = '（应该）下载成功了~';\n    alertBox.classList.add('alert-box', 'success');\n    document.body.appendChild(alertBox);\n\n    // 在下一个动画帧中添加淡出效果\n    requestAnimationFrame(() => {\n        alertBox.style.opacity = '1'; // 淡入效果\n    });\n\n    // 设置定时器，在3秒后隐藏提示框\n    setTimeout(function() {\n        // 在下一个动画帧中添加淡出效果\n        requestAnimationFrame(() => {\n            alertBox.style.opacity = '0'; // 淡出效果\n        });\n        // 3秒后删除提示框\n        setTimeout(() => {\n            document.body.removeChild(alertBox);\n        }, 300);\n    }, 3000);\n}\n\n// 获取所有按钮和 GitHub 图标链接元素\nconst buttons = document.querySelectorAll('.button');\nconst githubLink = document.querySelector('.github-link');\n\n// 遍历所有按钮，为它们添加鼠标悬停和点击事件监听器\nbuttons.forEach(button => {\n    button.addEventListener('mouseover', function() {\n        this.style.backgroundColor = '#0056b3'; // 改变背景颜色为悬停状态\n    });\n\n    button.addEventListener('mouseleave', function() {\n        this.style.backgroundColor = '#007bff'; // 恢复默认背景颜色\n    });\n\n    button.addEventListener('mousedown', function() {\n        this.style.backgroundColor = '#0056b3'; // 改变背景颜色为点击状态\n    });\n\n    button.addEventListener('mouseup', function() {\n        this.style.backgroundColor = '#007bff'; // 恢复默认背景颜色\n    });\n});\n\n// 为 GitHub 图标链接添加鼠标悬停和点击事件监听器\ngithubLink.addEventListener('mouseover', function() {\n    this.querySelector('img').style.filter = 'invert(100%)'; // 反转颜色\n});\n\ngithubLink.addEventListener('mouseleave', function() {\n    this.querySelector('img').style.filter = 'invert(0%)'; // 恢复默认颜色\n});\n\ngithubLink.addEventListener('mousedown', function() {\n    this.querySelector('img').style.filter = 'invert(100%)'; // 反转颜色\n});\n\ngithubLink.addEventListener('mouseup', function() {\n    this.querySelector('img').style.filter = 'invert(0%)'; // 恢复默认颜色\n});\n\n// 获取弹窗元素和关闭按钮\nconst modal = document.getElementById('helpModal');\nconst helpButton = document.getElementById('helpButton');\nconst closeButton = document.getElementsByClassName('close')[0];\n\n// 点击问号按钮显示弹窗\nhelpButton.onclick = function() {\n    modal.style.display = 'block';\n}\n\n// 点击关闭按钮或者弹窗外部区域关闭弹窗\ncloseButton.onclick = function() {\n    this.parentElement.parentElement.style.display = 'none'; // 修改这里\n}\n\nwindow.onclick = function(event) {\n    if (event.target == modal) {\n        modal.style.display = 'none';\n    }\n}\n"},{"url":"/uma/styles.css","content":"/* styles.css */\n\n.alert-box {\n    position: fixed;\n    top: 10px;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: rgba(255, 0, 0, 0.8);\n    color: white;\n    padding: 10px 20px;\n    border-radius: 5px;\n    z-index: 9999;\n    opacity: 0; /* 初始设置为透明 */\n    transition: opacity 0.5s ease; /* 添加过渡效果 */\n}\n\n.alert-box.success {\n    background-color: rgba(0, 255, 0, 0.8); /* 成功时的背景颜色 */\n}\n\n.alert-box.show {\n    opacity: 1; /* 显示时设置为不透明 */\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: #f0f0f0;\n}\n\n.container {\n    display: flex;\n    justify-content: space-between;\n    width: 90%; /* 设置容器宽度 */\n    max-width: 960px; /* 设置最大宽度 */\n    margin-top: 20px; /* 添加顶部间距 */\n}\n\n.card-preview {\n    width: 60%; /* 设置预览框宽度 */\n    height: 512px;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.border-container {\n    position: relative;\n    display: inline-block;\n}\n\n.border-image {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n#cardCanvas {\n    position: absolute;\n    top: 12px; /* 调整以适应边框内 */\n    left: 17px; /* 调整以适应边框内 */\n}\n\n.canvas-overlay {\n    position: absolute;\n    display: table;\n}\n\n.border-overlay {\n    position: relative;\n    pointer-events: none; /* 允许鼠标事件穿透 */\n    user-select: none; /* 禁止文本选中 */\n    -webkit-user-drag: none; /* 禁止拖拽 */\n    display: inline-block;\n}\n\n.tag, .type {\n    position: absolute;\n}\n\n.tag {\n    top: 2px;\n    left: 35px;\n}\n\n.type {\n    top: 1.5px;\n    left: 298px;\n}\n\n.controls {\n    width: 35%; /* 设置控制框宽度 */\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.control-label {\n    font-weight: bold;\n}\n\n.input-field {\n    width: 100%;\n    padding: 5px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n}\n\n.button {\n    background-color: #007bff;\n    color: white;\n    border: none;\n    padding: 10px;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n/* 添加按钮悬停/点击效果 */\n.button:hover,\n.button:active {\n    background-color: #0056b3; /* 悬停/点击状态时的背景颜色 */\n    transition: background-color 0.3s ease; /* 添加渐变效果 */\n}\n\n.github-link img {\n    transition: filter 0.3s ease; /* 添加渐变效果 */\n}\n\n.github-link:hover img,\n.github-link:active img {\n    filter: invert(100%); /* 悬停/点击状态时反转颜色 */\n}\n\n.scale-label {\n    display: inline-block;\n}\n\n.scale-controls {\n    display: flex; /* 修改为flex布局 */\n    align-items: center; /* 垂直居中对齐 */\n}\n\n.scale-controls .button {\n    margin: 0 5px; /* 添加按钮之间的间距 */\n}\n\n/* 新添加的 CSS 样式 */\n.header {\n    text-align: center;\n    margin-top: 20px;\n    font-size: 24px;\n    font-weight: bold;\n}\n\n.sub-header {\n    text-align: center;\n    font-size: 14px;\n    color: #888;\n}\n\n.github-link {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n}\n\n.github-link img {\n    width: 40px;\n    height: 40px;\n}\n\n/* 在你的 styles.css 文件中添加以下样式 */\n\n.modal {\n    display: none; /* 默认隐藏 */\n    position: fixed; /* 固定定位 */\n    z-index: 1; /* 设置 z-index，确保弹窗位于其他元素之上 */\n    left: 0;\n    top: 0;\n    width: 100%; /* 设置宽度为屏幕宽度 */\n    height: 100%; /* 设置高度为屏幕高度 */\n    overflow: auto; /* 添加滚动条，以防内容过长 */\n    background-color: rgba(0, 0, 0, 0.4); /* 半透明黑色背景 */\n}\n\n.modal-content {\n    background-color: #fefefe; /* 弹窗内容背景色 */\n    margin: 15% auto; /* 调整上下居中位置 */\n    padding: 20px;\n    border: 1px solid #888;\n    transform: translate(0%, 0%);\n    width: 70%; /* 设置弹窗内容宽度 */\n    max-width: 600px; /* 设置最大宽度 */\n    border-radius: 10px; /* 圆角边框 */\n}\n\n/* 关闭按钮样式 */\n.close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n\n/* 问号按钮样式 */\n.help-button {\n    position: fixed;\n    bottom: 20px;\n    left: 20px;\n}\n\n.help-button button {\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    font-size: 16px;\n    cursor: pointer;\n}\n\n/* 添加按钮悬停/点击效果 */\n.help-button button:hover,\n.help-button button:active {\n    background-color: #0056b3; /* 悬停/点击状态时的背景颜色 */\n    transition: background-color 0.3s ease; /* 添加渐变效果 */\n}\n\n/* 帮助内容弹窗样式 */\n.modal-content {\n    max-height: 80%;\n    overflow-y: auto;\n}\n\n.modal-content h2 {\n    margin-top: 0;\n}\n\n.modal-content h3 {\n    margin-top: 20px;\n}\n\n.modal-content ul,\n.modal-content ol {\n    margin-bottom: 20px;\n}\n\n/* 在样式表中添加媒体查询以适配手机端 */\n@media only screen and (max-width: 600px) {\n    /* 调整全局样式 */\n    .container {\n        flex-direction: column;\n    }\n\n    .card-preview {\n        width: 100%; /* 将预览框宽度调整为100% */\n        height: auto; /* 自适应高度 */\n    }\n\n    .controls {\n        width: 100%; /* 将控制框宽度调整为100% */\n    }\n\n    /* 调整按钮样式 */\n    .button {\n        width: 100%; /* 将按钮宽度调整为100% */\n    }\n\n    /* 调整预览框和控制框之间的间距 */\n    .container {\n        margin-top: 10px; /* 减小顶部间距 */\n        margin-bottom: 10px; /* 增加底部间距 */\n    }\n\n    /* 调整帮助按钮样式 */\n    .help-button {\n        bottom: 70px; /* 调整按钮位置 */\n        left: calc(50% - 50px); /* 居中显示按钮 */\n    }\n\n    .help-button button {\n        width: 60px; /* 调整按钮大小 */\n        height: 60px;\n        font-size: 24px; /* 调整按钮文字大小 */\n    }\n\n    /* 调整帮助内容弹窗样式 */\n    .modal-content {\n        margin: 10% auto; /* 调整上下居中位置 */\n        width: 90%; /* 调整弹窗内容宽度 */\n    }\n\n    .modal-content h2,\n    .modal-content h3,\n    .modal-content p {\n        font-size: 14px; /* 调整字体大小 */\n    }\n    /* 调整标题和旁边图片的大小 */\n    div[style=\"text-align: center;color: #62b912;font-size: 38px;font-weight: 600;\"] {\n        text-align: center;\n        margin-top: 10px; /* 缩小标题顶部间距 */\n        font-size: 24px; /* 缩小标题字体大小 */\n        font-weight: 600;\n    }\n\n    div[style=\"text-align: center;color: #62b912;font-size: 38px;font-weight: 600;\"] img {\n        width: 30px; /* 缩小旁边图片大小 */\n        height: 30px;\n    }\n\n    /* 调整帮助按钮样式 */\n    .help-button {\n        position: fixed; /* 保持在屏幕上 */\n        bottom: 20px; /* 将按钮放在底部 */\n        left: 20px; /* 将按钮放在左侧 */\n    }\n\n    .help-button button {\n        width: 40px; /* 缩小按钮大小 */\n        height: 40px;\n        font-size: 16px; /* 缩小按钮文字大小 */\n    }\n}\n\n/* 新增的 CSS 样式 */\n\n/* 使用弹性布局使标题和图片水平居中 */\n.title-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden; /* 隐藏溢出内容 */\n    text-align: center;\n    color: #62b912;\n    font-size: 38px;\n    font-weight: 600;\n}\n\n/* 限制标题和图片的最大宽度 */\n.title-container h1,\n.title-container img {\n    max-width: 100%;\n}\n\n/* 在小屏幕下（例如移动端）缩小标题字体大小 */\n@media screen and (max-width: 600px) {\n    .title-container {\n        font-size: 20px; /* 将字体大小调整为20像素 */\n    }\n    .left-icon,\n    .right-icon {\n        transform: scale(0.6); /* 缩小图标到原大小的 45% */\n    }\n}\n"},{"url":"/uma/html2canvas.js","content":"/*!\n * html2canvas 1.4.1 \n * Copyright (c) 2022 Niklas von Hertzen \n * Released under MIT License\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.html2canvas = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n\n    function __extends(d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n\n    var __assign = function() {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_) try {\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n                if (y = 0, t) op = [op[0] & 2, t.value];\n                switch (op[0]) {\n                    case 0: case 1: t = op; break;\n                    case 4: _.label++; return { value: op[1], done: false };\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                    default:\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                        if (t[2]) _.ops.pop();\n                        _.trys.pop(); continue;\n                }\n                op = body.call(thisArg, _);\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n\n    function __spreadArray(to, from, pack) {\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n            if (ar || !(i in from)) {\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n                ar[i] = from[i];\n            }\n        }\n        return to.concat(ar || from);\n    }\n\n    var Bounds = /** @class */ (function () {\n        function Bounds(left, top, width, height) {\n            this.left = left;\n            this.top = top;\n            this.width = width;\n            this.height = height;\n        }\n        Bounds.prototype.add = function (x, y, w, h) {\n            return new Bounds(this.left + x, this.top + y, this.width + w, this.height + h);\n        };\n        Bounds.fromClientRect = function (context, clientRect) {\n            return new Bounds(clientRect.left + context.windowBounds.left, clientRect.top + context.windowBounds.top, clientRect.width, clientRect.height);\n        };\n        Bounds.fromDOMRectList = function (context, domRectList) {\n            var domRect = Array.from(domRectList).find(function (rect) { return rect.width !== 0; });\n            return domRect\n                ? new Bounds(domRect.left + context.windowBounds.left, domRect.top + context.windowBounds.top, domRect.width, domRect.height)\n                : Bounds.EMPTY;\n        };\n        Bounds.EMPTY = new Bounds(0, 0, 0, 0);\n        return Bounds;\n    }());\n    var parseBounds = function (context, node) {\n        return Bounds.fromClientRect(context, node.getBoundingClientRect());\n    };\n    var parseDocumentSize = function (document) {\n        var body = document.body;\n        var documentElement = document.documentElement;\n        if (!body || !documentElement) {\n            throw new Error(\"Unable to get document size\");\n        }\n        var width = Math.max(Math.max(body.scrollWidth, documentElement.scrollWidth), Math.max(body.offsetWidth, documentElement.offsetWidth), Math.max(body.clientWidth, documentElement.clientWidth));\n        var height = Math.max(Math.max(body.scrollHeight, documentElement.scrollHeight), Math.max(body.offsetHeight, documentElement.offsetHeight), Math.max(body.clientHeight, documentElement.clientHeight));\n        return new Bounds(0, 0, width, height);\n    };\n\n    /*\n     * css-line-break 2.1.0 \n     * Copyright (c) 2022 Niklas von Hertzen \n     * Released under MIT License\n     */\n    var toCodePoints$1 = function (str) {\n        var codePoints = [];\n        var i = 0;\n        var length = str.length;\n        while (i < length) {\n            var value = str.charCodeAt(i++);\n            if (value >= 0xd800 && value "},{"url":"/ib/index.html","content":"\n\n\n    \n    \n    一点小祝福\n    \n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            margin: 0;\n            height: 100vh;\n            background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);\n            overflow: hidden;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n            color: white;\n            text-align: center;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            position: relative;\n        }\n\n        h1 {\n            margin: 20px 0;\n            font-size: 2.5rem;\n            text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n        }\n\n        p {\n            font-size: 1.2rem;\n            margin: 10px 0;\n            line-height: 1.6;\n        }\n\n        .shooting-star {\n            position: absolute;\n            width: 2px;\n            height: 80px;\n            background: linear-gradient(-45deg, white, rgba(255,255,255,0));\n            animation: tail 1.5s ease-out infinite;\n            filter: drop-shadow(0 0 5px white);\n        }\n\n        @keyframes tail {\n            0% {\n                transform: translateX(-300px) translateY(-300px) rotate(-45deg);\n                opacity: 1;\n            }\n            100% {\n                transform: translateX(300px) translateY(300px) rotate(-45deg);\n                opacity: 0;\n            }\n        }\n\n        .starfield {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            z-index: 0;\n        }\n\n        .content {\n            position: relative;\n            z-index: 1;\n            padding: 20px;\n            max-width: 800px;\n            margin: 0 auto;\n        }\n\n        .twinkle-star {\n            position: absolute;\n            width: 3px;\n            height: 3px;\n            background: rgba(255,255,255,0.9);\n            border-radius: 50%;\n            animation: twinkle 2s infinite;\n            box-shadow: 0 0 10px rgba(255,255,255,0.5);\n        }\n\n        @keyframes twinkle {\n            0%, 100% { \n                opacity: 0.3; \n                transform: scale(1);\n            }\n            50% { \n                opacity: 1;\n                transform: scale(1.5);\n                background: hsl(var(--hue), 100%, 70%);\n            }\n        }\n\n        .countdown-container {\n            background: rgba(0,0,0,0.3);\n            padding: 25px;\n            border-radius: 12px;\n            margin: 30px auto;\n            width: 90%;\n            max-width: 500px;\n            backdrop-filter: blur(5px);\n            border: 1px solid rgba(255,255,255,0.1);\n        }\n\n        .countdown-title {\n            font-size: 1.2rem;\n            margin-bottom: 15px;\n        }\n\n        #countdown {\n            color: #FFD700;\n            font-size: 2.5rem;\n            font-weight: bold;\n            filter: drop-shadow(0 0 5px #FFD700);\n            margin: 10px 0;\n        }\n\n        .time-info {\n            margin-top: 20px;\n            font-size: 0.9rem;\n            color: rgba(255,255,255,0.8);\n        }\n\n        .time-info div {\n            margin: 5px 0;\n        }\n\n        .audio-toggle {\n            position: fixed;\n            bottom: 20px;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 10;\n            background: rgba(0,0,0,0.7);\n            border-radius: 50%;\n            width: 40px;\n            height: 40px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n        }\n\n        .audio-toggle:hover {\n            background: rgba(0,0,0,0.9);\n            width: 200px;\n            border-radius: 20px;\n        }\n\n        .audio-toggle:hover .audio-player {\n            opacity: 1;\n            width: 180px;\n        }\n\n        .audio-player {\n            opacity: 0;\n            width: 0;\n            transition: all 0.3s ease;\n            overflow: hidden;\n        }\n\n        audio {\n            width: 100%;\n            max-width: 180px;\n        }\n\n        .audio-icon {\n            font-size: 20px;\n            position: absolute;\n        }\n\n        .audio-toggle:hover .audio-icon {\n            opacity: 0;\n        }\n\n        .emoji {\n            font-size: 1.5em;\n            vertical-align: middle;\n        }\n    \n\n\n    \n        \n    \n\n    \n        🌟 祝大家大考顺利！\n        愿每一颗流星，带来一份好运 🍀\n        愿努力与坚持，在考场上绽放光芒 ✨\n        \n        \n            距离IB大考还剩：\n            正在计算...\n            \n            \n                当前时间：加载中...\n                第一场考试（Chinese Paper 1）时间：2025年4月28日 13:30\n                剩余天数：计算中...\n            \n        \n    \n\n    \n        🎵\n        \n            \n                \n            \n        \n    \n\n    \n        // 生成星星和流星\n        function generateStars() {\n            const starfield = document.getElementById('starfield');\n\n            // 生成闪烁星星\n            for (let i = 0; i < 60; i++) {\n                const star = document.createElement('div');\n                star.className = 'twinkle-star';\n                star.style.left = Math.random() * 100 + '%';\n                star.style.top = Math.random() * 100 + '%';\n                star.style.animationDelay = Math.random() * 3 + 's';\n                const hue = Math.random() * 360;\n                star.style.setProperty('--hue', hue);\n                star.style.boxShadow = `0 0 8px hsl(${hue}, 80%, 60%)`;\n                starfield.appendChild(star);\n            }\n\n            // 生成流星\n            for (let i = 0; i < 13; i++) {\n                const meteor = document.createElement('div');\n                meteor.className = 'shooting-star';\n                meteor.style.left = Math.random() * 100 + '%';\n                meteor.style.animationDelay = Math.random() * 8 + 's';\n                meteor.style.top = Math.random() * 100 + '%';\n                starfield.appendChild(meteor);\n            }\n        }\n\n        // 更新时间和倒计时\n        function updateTime() {\n            const target = new Date('2025-04-28T13:30:00+08:00');\n            const now = new Date();\n\n            // 当前时间\n            document.getElementById('current-time').textContent =\n                `当前时间：${now.toLocaleString('zh-CN', {\n                    year: 'numeric',\n                    month: '2-digit',\n                    day: '2-digit',\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit',\n                    hour12: false\n                })}`;\n\n            // 倒计时秒数\n            const diffSeconds = Math.floor((target - now) / 1000);\n            document.getElementById('countdown').textContent =\n                `${diffSeconds} 秒 (约 ${Math.round(diffSeconds/3600)} 小时)`;\n\n            // 剩余天数\n            const diffDays = Math.floor(diffSeconds / (3600 * 24));\n            document.getElementById('days-left').textContent =\n                `剩余天数：${diffDays} 天`;\n        }\n\n        // 初始化\n        document.addEventListener('DOMContentLoaded', function() {\n            generateStars();\n            updateTime();\n            setInterval(updateTime, 1000);\n\n            // 音频处理函数\n            function handleAudioPlay() {\n                const audio = document.querySelector('audio');\n                if(audio) {\n                    audio.volume = 0.5;\n                    audio.play().catch(e => {\n                        console.log(\"播放失败:\", e);\n                        // 显示提示让用户点击\n                        showPlayHint();\n                    });\n                }\n            }\n\n            // 显示播放提示\n            function showPlayHint() {\n                const hint = document.createElement('div');\n                hint.innerHTML = '点击任意处播放音乐';\n                hint.style.position = 'fixed';\n                hint.style.bottom = '70px';\n                hint.style.left = '50%';\n                hint.style.transform = 'translateX(-50%)';\n                hint.style.backgroundColor = 'rgba(0,0,0,0.7)';\n                hint.style.padding = '10px 20px';\n                hint.style.borderRadius = '20px';\n                hint.style.zIndex = '100';\n                hint.style.cursor = 'pointer';\n                hint.onclick = function() {\n                    document.body.removeChild(hint);\n                    handleAudioPlay();\n                };\n                document.body.appendChild(hint);\n            }\n\n            // 首次尝试播放\n            handleAudioPlay();\n\n            // 点击任意位置尝试播放\n            document.addEventListener('click', function() {\n                handleAudioPlay();\n            }, { once: true });\n        });\n    \n\n"}]